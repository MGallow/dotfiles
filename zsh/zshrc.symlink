# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles

# Set bindkey
bindkey -v

setopt extendedglob

# Stash your environment variables in ~/.localrc. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

# all of our zsh files
typeset -U config_files
config_files=($ZSH/**/*.zsh~*/external*)

# load the path files
for file in ${(M)config_files:#*/path.zsh}
do
  source $file
done

# load everything but the path and completion files
for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}
do
  source $file
done

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}
do
  source $file
done

unset config_files

autoload -Uz compinit && compinit

# Prompt Setup
setopt prompt_subst
autoload -Uz vcs_info
zstyle ':vcs_info:*' actionformats \
    '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{3}|%F{1}%a%F{5}]%f '
zstyle ':vcs_info:*' formats       \
    '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{5}]%f '
zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat '%b%F{1}:%F{3}%r'

zstyle ':vcs_info:*' enable git cvs svn

# or use pre_cmd, see man zshcontrib
vcs_info_wrapper() {
  vcs_info 2>/dev/null
  if [ -n "$vcs_info_msg_0_" ]; then
    echo "%{$fg[grey]%}${vcs_info_msg_0_}%{$reset_color%}$del"
  fi

}
RPROMPT=$'$(vcs_info_wrapper)'

precmd () { vcs_info_wrapper }
#PROMPT='%F{5}[%F{2}%n%F{5}] %F{3}%3~ ${vcs_info_msg_0_} %f%# '

PROMPT='$'%{\e]0;%d\a%}\n%F{green}%n@%m %F{yellow}%d%f\n%λ '

# PS1='\[\033]0;$MSYSTEM:${PWD//[^[:ascii:]]/?}\007\]' # set window title
# # PS1="$PS1"'\n'                 # new line
# PS1="$PS1"'\[\033[32m\]'       # change to green
# PS1="$PS1"'\u@\h '             # user@host<space>
# # PS1="$PS1"'\[\033[35m\]'       # change to purple
# # PS1="$PS1"'$MSYSTEM '          # show MSYSTEM
# PS1="$PS1"'\[\033[33m\]'       # change to brownish yellow
# PS1="$PS1"'\w'                 # current working directory
# if test -z "$WINELOADERNOEXEC"
# then
#   GIT_EXEC_PATH="$(git --exec-path 2>/dev/null)"
#   COMPLETION_PATH="${GIT_EXEC_PATH%/libexec/git-core}"
#   COMPLETION_PATH="${COMPLETION_PATH%/lib/git-core}"
#   COMPLETION_PATH="$COMPLETION_PATH/share/git/completion"
#   if test -f "$COMPLETION_PATH/git-prompt.sh"
#   then
#     . "$COMPLETION_PATH/git-completion.bash"
#     . "$COMPLETION_PATH/git-prompt.sh"
#     PS1="$PS1"'\[\033[36m\]'  # change color to cyan
#     PS1="$PS1"'`__git_ps1`'   # bash function
#   fi
# fi
# PS1="$PS1"'\[\033[0m\]'        # change color
# PS1="$PS1"'\n'                 # new line
# PS1="$PS1"'λ '                 # prompt: always λ 

# PROMPT=$PS1